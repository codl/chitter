- content_for :page_title do
  = t('admin.accounts.title')

.filters
  .filter-subset
    %strong= t('admin.accounts.location.title')
    %ul
      %li= filter_link_to t('admin.accounts.location.all'), local: nil, remote: nil
      %li= filter_link_to t('admin.accounts.location.local'), local: '1', remote: nil
      %li= filter_link_to t('admin.accounts.location.remote'), remote: '1', local: nil
  .filter-subset
    %strong= t('admin.accounts.moderation.title')
    %ul
      %li= filter_link_to t('admin.accounts.moderation.all'), silenced: nil, suspended: nil
      %li= filter_link_to t('admin.accounts.moderation.silenced'), silenced: '1'
      %li= filter_link_to t('admin.accounts.moderation.suspended'), suspended: '1'
  .filter-subset
    %strong= t('admin.accounts.order.title')
    %ul
      %li= filter_link_to t('admin.accounts.order.alphabetic'), recent: nil
      %li= filter_link_to t('admin.accounts.order.most_recent'), recent: '1'

%table.table
  %thead
    %tr
      %th= t('admin.accounts.username')
      %th= t('admin.accounts.domain')
      %th= t('admin.accounts.confirmed')
      %th= fa_icon 'paper-plane-o'
      %th
  %tbody
    - @accounts.each do |account|
      %tr
        %td= account.username
        %td
          - unless account.local?
            = link_to account.domain, admin_accounts_path(by_domain: account.domain)
        %td
          - if account.local?
            - if account.user.present? && account.user.confirmed?
              %i.fa.fa-check
            - else 
              %i.fa.fa-times
        %td
          - if account.local?
            = t('admin.accounts.location.local')
          - elsif account.subscribed?
            %i.fa.fa-check
          - else
            %i.fa.fa-times
        %td
          = table_link_to 'circle', t('admin.accounts.web'), web_path("accounts/#{account.id}")
          = table_link_to 'globe', t('admin.accounts.public'), TagManager.instance.url_for(account)
          = table_link_to 'pencil', t('admin.accounts.edit'), admin_account_path(account.id)

= paginate @accounts
